version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: adventure_platform
      POSTGRES_USER: adventure_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-adventure_secret}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - adventure_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - adventure_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://adventure_user:${DB_PASSWORD:-adventure_secret}@postgres:5432/adventure_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MIDJOURNEY_API_KEY: ${MIDJOURNEY_API_KEY}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./worlds:/app/worlds
    networks:
      - adventure_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_WS_URL: ws://localhost:3000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - adventure_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - adventure_network

volumes:
  postgres_data:
  redis_data:

networks:
  adventure_network:
    driver: bridge